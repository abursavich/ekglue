package xds

import (
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

var (
	// Number of Envoy instances with an open CDS stream.
	cdsClientsStreaming = promauto.NewGauge(prometheus.GaugeOpts{
		Name: "cds_active_stream_count",
		Help: "The number of clients connected and streaming cluster updates.",
	})

	// A history of xds versions generated by this process.
	xdsConfigVersions = promauto.NewGaugeVec(prometheus.GaugeOpts{
		Name: "xds_config_versions",
		Help: "The age of the named config_version.",
	}, []string{"manager_name", "config_type", "config_version"})

	// A history of acceptance/rejection of every config version generated by this process.
	xdsConfigAcceptanceStatus = promauto.NewCounterVec(prometheus.CounterOpts{
		Name: "xds_config_acceptance_status",
		Help: "The number of Envoy instances that have accepted or rejected a config version.",
	}, []string{"manager_name", "config_type", "config_version", "status"})
)
